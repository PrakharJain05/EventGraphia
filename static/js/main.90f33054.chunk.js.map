{"version":3,"sources":["Image.js","App.js","index.js"],"names":["Image","imageNumber","src","alt","Modal","setAppElement","App","useState","count","setCount","imageNumbers","setImageNumbers","isModalOpen","setIsModalOpen","modalImageNumber","setModalImageNumber","showThumb","useEffect","handleDownload","a","fetch","mode","headers","then","response","blob","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","remove","success","fetchImages","arr","i","push","onKeyDown","e","key","getElementById","scrollIntoView","keyPress","isOpen","onRequestClose","onClick","style","color","dataLength","length","next","hasMore","loader","textAlign","endMessage","className","map","id","render"],"mappings":"gNAEaA,EAAQ,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACtB,OACE,qBACEC,IAAG,mDAA8CD,GACjDE,IAAG,UAAKF,M,yBCAdG,IAAMC,cAAc,SAEb,IAAMC,EAAM,WAAO,IAAD,EACGC,mBAAS,GADZ,mBAChBC,EADgB,KACTC,EADS,OAEiBF,mBAAS,IAF1B,mBAEhBG,EAFgB,KAEFC,EAFE,OAGeJ,oBAAS,GAHxB,mBAGhBK,EAHgB,KAGHC,EAHG,OAIyBN,mBAAS,MAJlC,mBAIhBO,EAJgB,KAIEC,EAJF,KAMjBC,EAAY,SAACf,GACjBc,EAAoBd,GACpBY,GAAe,IAGjBI,qBAAU,WACRD,EAAUF,KACT,CAACA,IAEJ,IAaMI,EAAc,uCAAG,sBAAAC,EAAA,sEACfC,MAAM,6CAAD,OACoCN,GAC7C,CACEO,KAAM,UACNC,QAAS,CAAE,8BAA+B,OAE5CC,KANI,uCAMC,WAAOC,GAAP,mBAAAL,EAAA,sEACcK,EAASC,OADvB,cACCA,EADD,OAECC,EAAMC,IAAIC,gBAAgBH,IAC1BI,EAAOC,SAASC,cAAc,MAC/BC,KAAON,EACZG,EAAKI,SAAW,YAChBH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLP,EAAKQ,SARA,kBASE,CAAEC,SAAS,IATb,4CAND,uDADe,2CAAH,qDAoBdC,EAAc,WAElB,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,GAAK,GAAIA,IACvBD,EAAIE,KAAKlC,EAAQiC,GAEnBhC,GAAS,SAACD,GAAD,OAAWA,EAAQ,MAC5BG,EAAgB,GAAD,mBAAKD,GAAiB8B,KAOvC,OAJAvB,qBAAU,WACRsB,MACC,IAGD,qCACGzB,GACC,qBAAK6B,UAAW,SAACC,GAAD,OAjDL,SAACA,GAChB,GAAI9B,EAAkB,CACS,IAAD,EAID,EAJb,eAAV8B,EAAEC,MACJ9B,EAAoBD,EAAmB,GACvC,UAAAgB,SAASgB,eAAT,UAA2BhC,WAA3B,SAAgDiC,gBAAe,IAEnD,cAAVH,EAAEC,MACJ9B,EAAoBD,EAAmB,GACvC,UAAAgB,SAASgB,eAAT,UAA2BhC,WAA3B,SAAgDiC,gBAAe,KAyCxCC,CAASJ,IAAhC,SACE,eAAC,IAAD,CACEK,OAAQrC,EACRsC,eAAgB,WACdrC,GAAe,GACfE,EAAoB,OAJxB,UAOE,wBAAQoC,QAAS,kBAAMjC,KAAvB,4BACA,wBACEkC,MAAO,CAAEC,MAAO,OAChBF,QAAS,WACPtC,GAAe,GACfE,EAAoB,OAJxB,mBASA,qBACEb,IAAG,qDAAgDY,GACnDX,IAAG,UAAKW,UAKhB,cAAC,IAAD,CACEwC,WAAY5C,EAAa6C,OACzBC,KAAM,kBAAMjB,KACZkB,SAAS,EACTC,OAAQ,oBAAIN,MAAO,CAAEO,UAAW,UAAxB,wBACRC,WACE,mBAAGR,MAAO,CAAEO,UAAW,UAAvB,SACE,4DAPN,SAWE,qBAAKE,UAAU,YAAf,SACGnD,EAAaoD,KAAI,SAAC7D,GAAD,OAChB,qBAEE8D,GAAE,UAAK9D,GACPkD,QAAS,kBAAMnC,EAAUf,IAH3B,SAKE,cAAC,EAAD,CAAOA,YAAaA,KAJfA,cC1GnB+D,iBACE,cAAC,aAAD,UACE,cAAC,EAAD,MAEFlC,SAASgB,eAAe,W","file":"static/js/main.90f33054.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Image = ({ imageNumber }) => {\r\n  return (\r\n    <img\r\n      src={`https://via.placeholder.com/200x200?text=${imageNumber}`}\r\n      alt={`${imageNumber}`}\r\n    />\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Image } from \"./Image\";\r\nimport { useEffect } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Modal from \"react-modal\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport const App = () => {\r\n  const [count, setCount] = useState(0);\r\n  const [imageNumbers, setImageNumbers] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalImageNumber, setModalImageNumber] = useState(null);\r\n\r\n  const showThumb = (imageNumber) => {\r\n    setModalImageNumber(imageNumber);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    showThumb(modalImageNumber);\r\n  }, [modalImageNumber]);\r\n\r\n  const keyPress = (e) => {\r\n    if (modalImageNumber) {\r\n      if (e.key === \"ArrowRight\") {\r\n        setModalImageNumber(modalImageNumber + 1);\r\n        document.getElementById(`${modalImageNumber}`)?.scrollIntoView(true);\r\n      }\r\n      if (e.key === \"ArrowLeft\") {\r\n        setModalImageNumber(modalImageNumber - 1);\r\n        document.getElementById(`${modalImageNumber}`)?.scrollIntoView(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDownload = async () => {\r\n    await fetch(\r\n      `http://via.placeholder.com/3900x3900?text=${modalImageNumber}`,\r\n      {\r\n        mode: \"no-cors\",\r\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      }\r\n    ).then(async (response) => {\r\n      const blob = await response.blob();\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.download = \"image.png\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n      return { success: true };\r\n    });\r\n  };\r\n\r\n  const fetchImages = () => {\r\n    let arr = [];\r\n    for (let i = 1; i <= 15; i++) {\r\n      arr.push(count + i);\r\n    }\r\n    setCount((count) => count + 15);\r\n    setImageNumbers([...imageNumbers, ...arr]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {modalImageNumber && (\r\n        <div onKeyDown={(e) => keyPress(e)}>\r\n          <Modal\r\n            isOpen={isModalOpen}\r\n            onRequestClose={() => {\r\n              setIsModalOpen(false);\r\n              setModalImageNumber(null);\r\n            }}\r\n          >\r\n            <button onClick={() => handleDownload()}>Download Image</button>\r\n            <button\r\n              style={{ color: \"red\" }}\r\n              onClick={() => {\r\n                setIsModalOpen(false);\r\n                setModalImageNumber(null);\r\n              }}\r\n            >\r\n              Close\r\n            </button>\r\n            <img\r\n              src={`https://via.placeholder.com/2000x2000?text=${modalImageNumber}`}\r\n              alt={`${modalImageNumber}`}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      )}\r\n      <InfiniteScroll\r\n        dataLength={imageNumbers.length}\r\n        next={() => fetchImages()}\r\n        hasMore={true}\r\n        loader={<h4 style={{ textAlign: \"center\" }}>Loading...</h4>}\r\n        endMessage={\r\n          <p style={{ textAlign: \"center\" }}>\r\n            <b>Yay! You have seen it all</b>\r\n          </p>\r\n        }\r\n      >\r\n        <div className=\"container\">\r\n          {imageNumbers.map((imageNumber) => (\r\n            <div\r\n              key={imageNumber}\r\n              id={`${imageNumber}`}\r\n              onClick={() => showThumb(imageNumber)}\r\n            >\r\n              <Image imageNumber={imageNumber} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </InfiniteScroll>\r\n    </>\r\n  );\r\n};\r\n","import React, { StrictMode } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./App\";\r\n\r\nrender(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}