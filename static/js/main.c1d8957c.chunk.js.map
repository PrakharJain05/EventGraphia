{"version":3,"sources":["Image.js","App.js","index.js"],"names":["Image","imageNumber","src","alt","Modal","setAppElement","App","useState","count","setCount","imageNumbers","setImageNumbers","isModalOpen","setIsModalOpen","modalImageNumber","setModalImageNumber","showThumb","useEffect","handleDownload","a","fetch","mode","headers","then","response","blob","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","remove","success","fetchImages","arr","i","push","dataLength","length","next","hasMore","loader","style","textAlign","endMessage","className","map","onKeyDown","e","key","keyPress","isOpen","onRequestClose","onClick","color","render","getElementById"],"mappings":"gNAEaA,EAAQ,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACtB,OACE,qBACEC,IAAG,mDAA8CD,GACjDE,IAAKF,K,yBCAXG,IAAMC,cAAc,SAEb,IAAMC,EAAM,WAAO,IAAD,EACGC,mBAAS,GADZ,mBAChBC,EADgB,KACTC,EADS,OAEiBF,mBAAS,IAF1B,mBAEhBG,EAFgB,KAEFC,EAFE,OAGeJ,oBAAS,GAHxB,mBAGhBK,EAHgB,KAGHC,EAHG,OAIyBN,qBAJzB,mBAIhBO,EAJgB,KAIEC,EAJF,KAMjBC,EAAY,SAACf,GACjBc,EAAoBd,GACpBY,GAAe,IAGjBI,qBAAU,WACRD,EAAUF,KACT,CAACA,IAEJ,IAWMI,EAAc,uCAAG,WAAOjB,GAAP,SAAAkB,EAAA,sEACfC,MAAM,6CAAD,OAA8CnB,GAAe,CACtEoB,KAAM,UACNC,QAAS,CAAE,8BAA+B,OACzCC,KAHG,uCAGE,WAAOC,GAAP,mBAAAL,EAAA,sEACaK,EAASC,OADtB,cACAA,EADA,OAEAC,EAAMC,IAAIC,gBAAgBH,IAC1BI,EAAOC,SAASC,cAAc,MAC/BC,KAAON,EACZG,EAAKI,SAAW,YAChBH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLP,EAAKQ,SARC,kBASC,CAAEC,SAAS,IATZ,4CAHF,uDADe,2CAAH,sDAiBdC,EAAc,WAElB,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,GAAK,GAAIA,IACvBD,EAAIE,KAAKlC,EAAQiC,GAEnBhC,GAAS,SAACD,GAAD,OAAWA,EAAQ,MAC5BG,EAAgB,GAAD,mBAAKD,GAAiB8B,KAOvC,OAJAvB,qBAAU,WACRsB,MACC,IAGD,cAAC,IAAD,CACEI,WAAYjC,EAAakC,OACzBC,KAAM,kBAAMN,KACZO,SAAS,EACTC,OAAQ,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,wBACRC,WACE,mBAAGF,MAAO,CAAEC,UAAW,UAAvB,SACE,4DAPN,SAWE,qBAAKE,UAAU,YAAf,SACGzC,EAAa0C,KAAI,SAACnD,GAAD,OAChB,qCACGa,GACC,qBAAKuC,UAAW,SAACC,GAAD,OAzDX,SAACA,EAAD,GACf,GADuC,EAAlBrD,YACjBW,EAAa,CACf,GAAc,eAAV0C,EAAEC,IACJ,OAAOxC,GAAoB,SAACd,GAAD,OAAiBA,EAAc,KAE5D,GAAc,cAAVqD,EAAEC,IACJ,OAAOxC,GAAoB,SAACd,GAAD,OAAiBA,EAAc,MAmD7BuD,CAASF,EAAGrD,IAAnC,SACE,eAAC,IAAD,CACEwD,OAAQ7C,EACR8C,eAAgB,WACd7C,GAAe,GACfE,EAAoB,OAJxB,UAOE,wBAAQ4C,QAAS,kBAAMzC,EAAejB,IAAtC,4BAGA,wBACE+C,MAAO,CAAEY,MAAO,OAChBD,QAAS,WACP9C,GAAe,GACfE,EAAoB,OAJxB,mBASA,qBACEb,IAAG,qDAAgDY,GACnDX,IAAKW,SAKb,qBAAK6C,QAAS,kBAAM3C,EAAUf,IAA9B,SACE,cAAC,EAAD,CAAOA,YAAaA,iBCvGlC4D,iBACE,cAAC,aAAD,UACE,cAAC,EAAD,MAEF/B,SAASgC,eAAe,W","file":"static/js/main.c1d8957c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Image = ({ imageNumber }) => {\r\n  return (\r\n    <img\r\n      src={`https://via.placeholder.com/200x200?text=${imageNumber}`}\r\n      alt={imageNumber}\r\n    />\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Image } from \"./Image\";\r\nimport { useEffect } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Modal from \"react-modal\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport const App = () => {\r\n  const [count, setCount] = useState(0);\r\n  const [imageNumbers, setImageNumbers] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalImageNumber, setModalImageNumber] = useState();\r\n\r\n  const showThumb = (imageNumber) => {\r\n    setModalImageNumber(imageNumber);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    showThumb(modalImageNumber);\r\n  }, [modalImageNumber]);\r\n\r\n  const keyPress = (e, { imageNumber }) => {\r\n    if (isModalOpen) {\r\n      if (e.key === \"ArrowRight\") {\r\n        return setModalImageNumber((imageNumber) => imageNumber + 1);\r\n      }\r\n      if (e.key === \"ArrowLeft\") {\r\n        return setModalImageNumber((imageNumber) => imageNumber - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDownload = async (imageNumber) => {\r\n    await fetch(`http://via.placeholder.com/3900x3900?text=${imageNumber}`, {\r\n      mode: \"no-cors\",\r\n      headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n    }).then(async (response) => {\r\n      const blob = await response.blob();\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.download = \"image.png\";\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n      return { success: true };\r\n    });\r\n  };\r\n\r\n  const fetchImages = () => {\r\n    let arr = [];\r\n    for (let i = 1; i <= 15; i++) {\r\n      arr.push(count + i);\r\n    }\r\n    setCount((count) => count + 15);\r\n    setImageNumbers([...imageNumbers, ...arr]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, []);\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={imageNumbers.length}\r\n      next={() => fetchImages()}\r\n      hasMore={true}\r\n      loader={<h4 style={{ textAlign: \"center\" }}>Loading...</h4>}\r\n      endMessage={\r\n        <p style={{ textAlign: \"center\" }}>\r\n          <b>Yay! You have seen it all</b>\r\n        </p>\r\n      }\r\n    >\r\n      <div className=\"container\">\r\n        {imageNumbers.map((imageNumber) => (\r\n          <>\r\n            {modalImageNumber && (\r\n              <div onKeyDown={(e) => keyPress(e, imageNumber)}>\r\n                <Modal\r\n                  isOpen={isModalOpen}\r\n                  onRequestClose={() => {\r\n                    setIsModalOpen(false);\r\n                    setModalImageNumber(null);\r\n                  }}\r\n                >\r\n                  <button onClick={() => handleDownload(imageNumber)}>\r\n                    Download Image\r\n                  </button>\r\n                  <button\r\n                    style={{ color: \"red\" }}\r\n                    onClick={() => {\r\n                      setIsModalOpen(false);\r\n                      setModalImageNumber(null);\r\n                    }}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <img\r\n                    src={`https://via.placeholder.com/2000x2000?text=${modalImageNumber}`}\r\n                    alt={modalImageNumber}\r\n                  />\r\n                </Modal>\r\n              </div>\r\n            )}\r\n            <div onClick={() => showThumb(imageNumber)}>\r\n              <Image imageNumber={imageNumber} />\r\n            </div>\r\n          </>\r\n        ))}\r\n      </div>\r\n    </InfiniteScroll>\r\n  );\r\n};\r\n","import React, { StrictMode } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./App\";\r\n\r\nrender(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}